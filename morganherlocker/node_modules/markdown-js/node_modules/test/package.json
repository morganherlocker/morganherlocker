{
  "name": "test",
  "version": "0.4.4",
  "description": "UncommonJS test runner.",
  "keywords": [
    "test",
    "commonjs",
    "unit test"
  ],
  "homepage": "https://github.com/Gozala/test-commonjs/",
  "author": {
    "name": "Irakli Gozalishvili",
    "email": "rfobic@gmail.com",
    "url": "http://jeditoolkit.com"
  },
  "contributors": [
    {
      "name": "Irakli Gozalishvili",
      "email": "rfobic@gmail.com",
      "url": "http://jeditoolkit.com"
    },
    {
      "name": "Kris Kowal",
      "email": "kris@cixar.com",
      "url": "http://github.com/kriskowal/"
    },
    {
      "name": "Zach Carter"
    },
    {
      "name": "Felix GeisendÃ¶rfer"
    },
    {
      "name": "Karl Guertin"
    },
    {
      "name": "Ash Berlin"
    },
    {
      "name": "Francois Lafortune"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Gozala/test-commonjs.git",
    "web": "https//github.com/Gozala/test-commonjs"
  },
  "bugs": {
    "url": "http://github.com/Gozala/test-commonjs/issues/"
  },
  "scripts": {
    "test": "node tests/engines/node/test.js",
    "test-browser": "open tests/engines/browser/index.html"
  },
  "main": "./engines/node/test.js",
  "engines": {
    "node": ">=0.4.x"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://jeditoolkit.com/LICENSE"
    }
  ],
  "readme": "# UncommonJS unit test runner #\n\nImplementation of [UncommonJS unit test runner].\n\n## Testing ##\n\nIn order to make your package testable from [npm] you should:\n\n- Create a directory in your package root.\n- Define test directory in package descriptor under `directories` section.\n- Define test script in package descriptor under `scripts` section.\n- Define dependency on this package (It's name is \"test\" in [npm] registry).\n- Write your tests\n- Test your package by running all tests `npm test`\n  or run individual tests `node ./path/to/test/group.js`\n\n####Example####\n\n- package.json\n\n    ```js\n    { \"name\": \"mypackage\",\n      \"version\": \"0.7.0\",\n      \"description\": \"Sample package\",\n      \"scripts\": { \"test\": \"node test/all.js\" },\n      \"devDependencies\": { \"test\": \">=0.0.5\" }\n    }\n    ```\n\n- test/fail-slow.js\n\n    ```js\n    // if test function expects second named argument it will be executed\n    // in async mode and test will be complete only after callback is called\n    exports['test my async foo'] = function(assert, done) {\n      var http = require('http')\n      var google = http.createClient(80, 'www.jeditoolkit.com')\n      var request = google.request('GET', '/', {'host': 'www.jeditoolkit.com'})\n      request.end()\n      request.on('response', function (response) {\n        assert.equal(response.statusCode, 302, 'must redirect') // will log result\n        response.setEncoding('utf8')\n        response.on('data', function (chunk) {\n          assert.notEqual(chunk, 'helo world', 'must be something more inteligent')\n          done() // telling test runner that we're done with this test\n        })\n      })\n    }\n\n    if (module == require.main) require('test').run(exports)\n    ```\n\n  - test/fail-slow.js\n\n    ```js\n    // using assert passed to the test function that just logs failures\n    exports['test that logs all failures'] = function(assert) {\n      assert.equal(2 + 2, 5, 'assert failure is logged')\n      assert.equal(3 + 2, 5, 'assert pass is logged')\n    }\n\n    if (module == require.main) require('test').run(exports)\n    ```\n\n  - test/fail-fast.js\n\n    ```js\n    // using nodejs's build in asserts that throw on failure\n    var assert = require('assert')\n\n    exports['test that stops execution on first failure'] = function() {\n      assert.equal(2 + 2, 5, 'assert fails and test execution stop here')\n      assert.equal(3 + 2, 5, 'will never pass this since test failed above')\n    }\n\n    if (module == require.main) require('test').run(exports)\n    ```\n\n  - test/custom-assert.js\n\n    ```js\n    var AssertBase = require('assert').Assert\n    var AssertDescriptor = {\n      constructor: { value: Assert },\n      inRange: { value: function (lower, inner, upper, message) {\n        if (lower < inner && inner < upper) {\n          this.fail({\n            actual: inner,\n            expected: lower + '> ' + ' < ' + upper,\n            operator: \"inRange\",\n            message: message\n          })\n        } else {\n          this.pass(message);\n        }\n      }, enumerable: true }\n    }\n    function Assert() {\n      return Object.create(AssertBase.apply(null, arguments), AssertDescriptor)\n    }\n\n    // bundling custom asserts with test suite\n    exports.Assert = Assert\n    exports['test with custom asserts'] = function(assert) {\n      assert.inRange(2, 3, 5, 'passes assert and logs')\n      assert.equal(3 + 2, 5, 'assert pass is logged')\n    }\n\n    if (module == require.main) require('test').run(exports)\n    ```\n\nFor more examples checkout tests for this package and for more details see\nthe [UncommonJS unit test runner] specification.\n\n[UncommonJS unit test runner]:https://github.com/kriskowal/uncommonjs/blob/master/tests/specification.md\n[npm]:http://npmjs.org/\n\n",
  "_id": "test@0.4.4",
  "dist": {
    "shasum": "4ce5df2aa43c4481ddebe2a79241ea169f252471"
  },
  "_from": "test@>=0.0.5"
}
